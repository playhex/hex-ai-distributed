###
#    SERVER
#
# Provides an http API to compute moves.
# Moves computations are sent to connected workers.
###

# Required to queue moves computations
REDIS_URL=0.0.0.0:6379

# Where peers have connect
PEER_SERVER_PORT=8089

# On which peer server api listens to, internal only, to get peers status
PEER_SERVER_API_HOST=0.0.0.0
PEER_SERVER_API_PORT=8090

# Optional. Mysql database used for logging specific things, and search logs.
# Example: "mysql://root:password@localhost:3306/hex_ai_logs"
MYSQL_DATABASE_URI=


###
#   WORKER
#
# Connect to server and wait for move commutations.
# Runs Hex AI engines, and communicate with them.
###

# Server to connect, wait for its moves computations
SERVER_HOST=0.0.0.0
SERVER_PORT=8089

# Commands to run engines
MOHEX_BIN="/bin/mohex --seed 1"
KATAHEX_BIN="/bin/katahex gtp -config ./katahex/config.cfg -model ./katahex/katahex_model_20220618.bin.gz"

# In most case it will be false.
# Set true if your worker should never accept moves computations,
# unless there is absolutely no other workers.
# Use case: the worker is a fallback, hosted on the same server than the application.
PEER_CONFIG_SECONDARY=false


###
#   Utils
#
# Optional config available to any service.
###

# InfluxDB, monitoring metrics.
# Either a local instance of influxdb (then create dashboard), or cloud influx + cloud grafana
# Example:                  (all 3 must be set in order to enable monitoring)
#   HOST="https://eu-central-1-1.aws.cloud2.influxdata.com"
#   TOKEN="vyid-s4nzG..."   (token must have write bucket access)
#   DATABASE=hex            (bucket name)
INFLUX_HOST=
INFLUX_TOKEN=
INFLUX_DATABASE=
